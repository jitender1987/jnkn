#!/usr/bin/env groovy

def products
def versions

def product() {
    dir('/app/JobRelease') {
        products = sh (script: 'cat latest_release.txt |awk \'{print $1}\' FS=:', returnStdout: true).trim()
    }
}

pipeline {
agent any
    parameters {
        choice(name: 'Products', choices:"${products}", description: "" )
    }
    stages {
        stage("choose version") {
            steps {
                script {
                    def version_collection
                    def chosen_product = "${params.Products}"
                    dir('/app/JobRelease') {
                         version_collection = sh (script: 'cat latest_release.txt |grep smart-ttx-annualroll-outbound|awk \'{print $2}\' FS=:', returnStdout: true).trim()
                    }
                        versions = input message: 'Choose testload version!', ok: 'SET', parameters: [choice(name: 'TESTLOAD_VERSION', choices: "${version_collection}", description: '')]


        stage("build") {
            steps {
                script {
                    build(job: "builder-job",
                        parameters:
                        [string(name: 'Nodes', value: "${params.Nodes}"),
                        string(name: 'Versions', value: "${versions}"),
                        ])
                }
            }
        }
    }
}
}
}
}
